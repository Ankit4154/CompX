<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/spring-context.xsd">

	<!-- If a Bean is defined here an object of the class gets initialized always 
		as soon as context configurations are loaded. This happens irrespective of 
		whether the bean is defined or used in the calling class. -->
	<!-- Define dependency -->
	<bean id="supportedGames" class="com.compx.GameService">
	</bean>
	<bean id="selectedProcessor" class="com.compx.IntelProcessor">
		<!-- Constructor injection -->
		<constructor-arg ref="supportedGames" />
		<property name="name" value="Intel Processor" />
	</bean>
	<bean id="ryzenProc" class="com.compx.RyzenProcessor"
		init-method="myInit" destroy-method="myDestroy">
		<!-- Setter injection -->
		<property name="gameService" ref="supportedGames" />
		<property name="name" value="Ryzen Processor" />
	</bean>
	<bean id="intelProc" class="com.compx.IntelProcessor">
		<!-- Retrieve values from property file via Property Configure -->
		<property name="name" value="${intel.processor.name}" />
	</bean>
	<bean class="com.compx.DisplayNameBeanPostProcessor" />
	<bean class="com.compx.MyBeanFactoryPostProcessor" />
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="processorvalues.properties" />
	</bean>
</beans>